defaults: &defaults
  working_directory: ~/projects
  docker:
    - image: circleci/openjdk:8
    - image: circleci/postgres:9.6.2-alpine
      environment:
        POSTGRES_USER: mmsuser
        POSTGRES_DB: mms
    - image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
      environment:
        - discovery.type=single-node
        - http.host=127.0.0.1
        - transport.host=127.0.0.1
        - xpack.security.enabled=false
        - ES_JAVA_OPTS=-Xms750m -Xmx750m

version: 2
jobs:
  build_amps:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: mms-{{ checksum "mms-ent/pom.xml" }}

      - run:
          name: Get OS Dependencies
          command: sudo apt install python-setuptools postgresql-client && sudo easy_install -U pip

      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

      - run:
          name: Initialize database
          command: psql -U mmsuser -h localhost -f mms-ent/repo-amp/src/main/resources/mms.sql mms

      - run:
          name: Initialize elasticsearch
          command: curl -d @mms-ent/repo-amp/src/main/resources/mapping_template.json -XPUT http://localhost:9200/_template/template

      - run:
          name: Install requests for robot-tests
          command: pip install --target=mms-ent/runner/src/test/robotframework/libraries requests

      - run:
          name: Copy properties
          command: cd mms-ent && cp mms.properties.example mms.properties

      - run:
          name: Run Maven Build
          command: cd mms-ent && sh mvnw install -P run,robot-tests

      - save_cache:
          paths:
            - ~/.m2
          key: mms-{{ checksum "mms-ent/pom.xml" }}

      - run:
          name: Prepare Store Artifacts
          command: mkdir -p tmp/artifacts

      - run:
          name: Get Version Number
          command: export MMSVERSION=`find mms-ent/repo-amp/target/ -name *.amp -exec basename {} .amp \; | sed s/mms-amp-//g`

      - store_artifacts:
          path: mms-ent/repo-amp/target/mms-amp-*.amp
          destination: tmp/artifacts/mms-amp.amp

      - store_artifacts:
          path: mms-ent/share-amp/target/mms-share-amp-*.amp
          destination: tmp/artifacts/mms-share-amp.amp

      - store_artifacts:
          path: mms-ent/repo-amp/target/mms-java-client-*.zip
          destination: tmp/artifacts/mms-java-client.zip

      - store_artifacts:
          path: mms-ent/repo-amp/target/mms-python-client-*.zip
          destination: tmp/artifacts/mms-python-client.zip

      - store_artifacts:
          path: mms-ent/repo-amp/target/mms-mathematica-client-*.zip
          destination: tmp/artifacts/mms-mathematica-client.zip

      - persist_to_workspace:
          root: mms-ent
          paths:
            - repo-amp/target
            - share-amp/target

  deploy_snapshot:
    <<: *defaults
    steps:
      - attach_workspace:
          at: mms-ent
      - run:
          name: Get jfrog
          command: curl -fL https://getcli.jfrog.io | sh
      - run:
          name: Set Permissions
          command: sudo chmod +x jfrog
      - run:
          name: Get Version Number
          command: export MMSVERSION=`find mms-ent/repo-amp/target/ -name *.amp -exec basename {} .amp \; | sed s/mms-amp-//g`
      - run:
          name: Configure jfrog
          command: ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_APIKEY --interactive false
      - run:
          name: Send mms-amp
          command: ./jfrog rt u 'mms-ent/repo-amp/target/*.amp' libs-snapshot-local/gov/nasa/jpl/mms/mms-amp/$MMSVERSION/ --build-name=mms-circleci --build-number=$CIRCLE_BUILD_NUM --flat=true
      - run:
          name: Send mms-share-amp
          command: ./jfrog rt u 'mms-ent/share-amp/target/*.amp' libs-snapshot-local/gov/nasa/jpl/mms/mms-share-amp/$MMSVERSION/ --build-name=mms-circleci --build-number=$CIRCLE_BUILD_NUM --flat=true
      - run:
          name: Send mms java client
          command: ./jfrog rt u 'mms-ent/repo-amp/target/mms-java-*.zip' libs-snapshot-local/gov/nasa/jpl/mms/mms-java-client/$MMSVERSION/ --build-name=mms-circleci --build-number=$CIRCLE_BUILD_NUM --flat=true
      - run:
          name: Send mms python client
          command: ./jfrog rt u 'mms-ent/repo-amp/target/mms-python-*.zip' libs-snapshot-local/gov/nasa/jpl/mms/mms-python-client/$MMSVERSION/ --build-name=mms-circleci --build-number=$CIRCLE_BUILD_NUM --flat=true
      - run:
          name: Send mms mathematica client
          command: ./jfrog rt u 'mms-ent/repo-amp/target/mms-mathematica-*.zip' libs-snapshot-local/gov/nasa/jpl/mms/mms-mathematica-client/$MMSVERSION/ --build-name=mms-circleci --build-number=$CIRCLE_BUILD_NUM --flat=true

  deploy_release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: mms-ent
      - run:
          name: Get jfrog
          command: curl -fL https://getcli.jfrog.io | sh
      - run:
          name: Set Permissions
          command: sudo chmod +x jfrog
      - run:
          name: Configure jfrog
          command: ./jfrog rt config --url $ARTIFACTORY_URL --user $ARTIFACTORY_USER --apikey $ARTIFACTORY_APIKEY --interactive false
      - run:
          name: Send mms-amp
          command: ./jfrog rt u 'mms-ent/repo-amp/target/*.amp' libs-release-local/gov/nasa/jpl/mms/mms-amp/3.3.0-SNAPSHOT/ --build-name=mms-circleci --build-number=$CIRCLE_BUILD_NUM --flat=true
      - run:
          name: Send mms-share-amp
          command: ./jfrog rt u 'mms-ent/share-amp/target/*.amp' libs-release-local/gov/nasa/jpl/mms/mms-share-amp/3.3.0-SNAPSHOT/ --build-name=mms-circleci --build-number=$CIRCLE_BUILD_NUM --flat=true
      - run:
          name: Send mms java client
          command: ./jfrog rt u 'mms-ent/repo-amp/target/mms-java-*.zip' libs-release-local/gov/nasa/jpl/mms/mms-java-client/3.3.0-SNAPSHOT/ --build-name=mms-circleci --build-number=$CIRCLE_BUILD_NUM --flat=true
      - run:
          name: Send mms python client
          command: ./jfrog rt u 'mms-ent/repo-amp/target/mms-python-*.zip' libs-release-local/gov/nasa/jpl/mms/mms-python-client/3.3.0-SNAPSHOT/ --build-name=mms-circleci --build-number=$CIRCLE_BUILD_NUM --flat=true
      - run:
          name: Send mms mathematica client
          command: ./jfrog rt u 'mms-ent/repo-amp/target/mms-mathematica-*.zip' libs-release-local/gov/nasa/jpl/mms/mms-mathematica-client/3.3.0-SNAPSHOT/ --build-name=mms-circleci --build-number=$CIRCLE_BUILD_NUM --flat=true

workflows:
  version: 2
  build-deploy-snapshot:
    jobs:
      - build_amps
      - deploy_snapshot:
          requires:
            - build_amps
